#!/usr/bin/env node

/**
 * Generate TypeScript types from i18n translations
 * Provides type safety for translation keys
 */

const fs = require('fs');
const path = require('path');

const i18n = require('../src/_data/i18n.cjs');

const keys = Object.keys(i18n.translations.en).sort();

const typeDefinition = `/**
 * Auto-generated i18n translation keys
 * DO NOT EDIT MANUALLY - generated by scripts/generate-i18n-types.cjs
 *
 * Run \`npm run i18n:types\` to regenerate
 */

export type TranslationKey =
  | '${keys.join("'\n  | '")}';

export type TranslationFunction = (key: TranslationKey) => string;

/**
 * Number of translation keys: ${keys.length}
 * Generated: ${new Date().toISOString()}
 */
`;

const outputPath = path.join(__dirname, '../src/_data/i18n/types.ts');
fs.writeFileSync(outputPath, typeDefinition);

console.log('\n✅ Generated TypeScript types for i18n');
console.log(`📊 Total keys: ${keys.length}`);
console.log(`📝 Output: src/_data/i18n/types.ts\n`);
